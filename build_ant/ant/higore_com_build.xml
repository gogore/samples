<?xml version="1.0"?>

<project name="MyProject" default="dist" basedir=".">
    <description>
        my jenkins build script
    </description>

    <!-- set global properties for this build -->
    <property name="classpath" value="%JAVA_HOME%/lib/tools.jar;D:\Developer\tomcat\apache-tomcat-7.0.64\lib\servlet-api.jar"/>
    <property name="src" location="src" />
    <property name="resources" location="resources" />
    <property name="web" location="web" />
    <property name="build.home" location="build" />
    <property name="build.class" location="${build.home}\WEB-INF\classes" />
    <property name="dist" location="D:\Developer\tomcat\apache-tomcat-7.0.64\jhWebapps\com" />
	<property name="findbugs.home" value="D:\Developer\findbugs\findbugs-3.0.1" />

	<!--findbugs -->
	<path id="findbugs.classpath">
        <pathelement location="${findbugs.home}\lib\findbugs-ant.jar" />
    </path>
	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpathref="findbugs.classpath"/>

    <target name="init" depends="clean">
        <!-- Create the time stamp -->
        <tstamp />
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build.class}" />
    </target>
    <path id="lib.path.ref">
        <pathelement path="${classpath}"/>
        <fileset dir="web\WEB-INF\lib" includes="*.jar" />
    </path>
    <target name="compile" depends="init" description="compile the source">
        <!-- Compile the java code from ${src} into ${build} -->
        <javac  classpathref="lib.path.ref"
                srcdir="${src}"
                destdir="${build.class}"
                encoding="utf-8"
                debug="on"
                deprecation="off"
                optimize="off">
        </javac>

        <!-- Copies non java files that need to be in the classes directory -->
        <copy todir="${build.home}">
            <fileset dir="${web}">
                <exclude name="WEB-INF/classes/**"/>
            </fileset>
        </copy>
        <copy todir="${build.class}">
            <fileset dir="${src}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy todir="${build.class}">
            <fileset dir="${resources}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
	<target name="findbugs" depends = "compile">
        <findbugs home="${findbugs.home}"
                  output="xml:withMessages"
                  outputFile="report\findbugs.xml"
        	      jvmargs="-Dfile.encoding=UTF-8">
            <sourcePath path="${src}" />
            <class location="${build.class}" />
        </findbugs>
    </target>

    <target name="dist" depends="findbugs" description="generate the distribution">
        <war warfile="${dist}\com.war">
            <fileset dir="${build.home}"/>
        </war>
    </target>



    <target name="clean" description="clean up">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build.home}" />
    </target>


</project>

